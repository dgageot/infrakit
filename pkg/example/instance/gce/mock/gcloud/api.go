// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/docker/infrakit/pkg/example/instance/gce/gcloud (interfaces: GCloud)

package gcloud

import (
	gcloud "github.com/docker/infrakit/pkg/example/instance/gce/gcloud"
	gomock "github.com/golang/mock/gomock"
	v1 "google.golang.org/api/compute/v1"
)

// Mock of GCloud interface
type MockGCloud struct {
	ctrl     *gomock.Controller
	recorder *_MockGCloudRecorder
}

// Recorder for MockGCloud (not exported)
type _MockGCloudRecorder struct {
	mock *MockGCloud
}

func NewMockGCloud(ctrl *gomock.Controller) *MockGCloud {
	mock := &MockGCloud{ctrl: ctrl}
	mock.recorder = &_MockGCloudRecorder{mock}
	return mock
}

func (_m *MockGCloud) EXPECT() *_MockGCloudRecorder {
	return _m.recorder
}

func (_m *MockGCloud) CreateInstance(_param0 string, _param1 *gcloud.InstanceSettings) error {
	ret := _m.ctrl.Call(_m, "CreateInstance", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockGCloudRecorder) CreateInstance(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateInstance", arg0, arg1)
}

func (_m *MockGCloud) DeleteInstance(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteInstance", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockGCloudRecorder) DeleteInstance(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteInstance", arg0)
}

func (_m *MockGCloud) ListInstances() ([]*v1.Instance, error) {
	ret := _m.ctrl.Call(_m, "ListInstances")
	ret0, _ := ret[0].([]*v1.Instance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockGCloudRecorder) ListInstances() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListInstances")
}
